{
  "type": "object",
  "additionalProperties": true,
  "required": [
      "password"
  ],
  "properties": {
      "password": {
        "$id": "#/properties/password",
        "type": "string",
        "title": "Web UI Password",
        "description": "Password to access the web interface"
      },
      "gitUrl": {
        "type": "string",
        "title": "Git repository URL (optional)",
        "description": "URL of a git repository to clone in the workspace."
      },
      "storage": {
          "$id": "#/properties/storage",
          "type": "object",
          "title": "Persistent storage",
          "description": "Configure the persistent volume to store your data.",
          "required": [
              "size",
              "mountPath"
          ],
          "properties": {
              "size": {
                  "$id": "#/properties/storage/properties/size",
                  "type": "string",
                  "title": "Size of the persistent storage",
                  "description": "Size of the persistent storage created"
              },
              "mountPath": {
                  "$id": "#/properties/storage/properties/mountPath",
                  "type": "string",
                  "title": "Mount path of the persistent storage",
                  "description": "mount path of the persistent storage, usually in the home folder"
              }
          },
          "additionalProperties": true
      },
      "image": {
          "$id": "#/properties/image",
          "type": "object",
          "title": "Docker image",
          "description": "Configure the Docker image to use.",
          "required": [
              "repository",
              "tag",
              "pullPolicy"
          ],
          "properties": {
              "repository": {
                  "$id": "#/properties/image/properties/repository",
                  "type": "string",
                  "title": "Image repository",
                  "description": "URL of the Docker image to use"
              },
              "tag": {
                  "$id": "#/properties/image/properties/tag",
                  "type": "string",
                  "title": "Tag of the image",
                  "description": "Tag (version) of the image used"
              },
              "pullPolicy": {
                  "$id": "#/properties/image/properties/pullPolicy",
                  "type": "string",
                  "title": "Image pull policy",
                  "description": "Describe when the image is pulled: Always, IfNotPresent, Never."
              }
          },
          "additionalProperties": true
      },
      "serviceAccount": {
          "$id": "#/properties/serviceAccount",
          "type": "object",
          "title": "Service Account configuration",
          "description": "Configure the Kubernetes service account running the application",
          "required": [
              "name",
              "create"
          ],
          "properties": {
              "name": {
                  "$id": "#/properties/serviceAccount/properties/name",
                  "type": "string",
                  "title": "Service account name",
                  "description": "Name of the service account to use"
              },
              "create": {
                  "$id": "#/properties/serviceAccount/properties/create",
                  "type": "boolean",
                  "title": "Create the service account"
              },
              "annotations": {
                  "$id": "#/properties/serviceAccount/properties/annotations",
                  "type": "object",
                  "title": "annotations",
                  "additionalProperties": true
              }
          },
          "additionalProperties": true
      },
      "service": {
          "$id": "#/properties/service",
          "type": "object",
          "title": "Service configuration",
          "description": "Configure the service on which the application will run (port)",
          "required": [
              "type",
              "port"
          ],
          "properties": {
              "type": {
                  "$id": "#/properties/service/properties/type",
                  "type": "string",
                  "title": "Service type"
              },
              "port": {
                  "$id": "#/properties/service/properties/port",
                  "type": "integer",
                  "title": "Port"
              }
          },
          "additionalProperties": true
      },
      "openshiftRoute": {
          "$id": "#/properties/openshiftRoute",
          "type": "object",
          "title": "Expose route on OpenShift",
          "description": "Enabled by default",
          "required": [
              "enabled",
              "tls"
          ],
          "properties": {
              "enabled": {
                  "$id": "#/properties/openshiftRoute/properties/enabled",
                  "type": "boolean",
                  "title": "Enabled"
              },
              "host": {
                  "$id": "#/properties/openshiftRoute/properties/host",
                  "type": "string",
                  "title": "Host of the route"
              },
              "path": {
                  "$id": "#/properties/openshiftRoute/properties/path",
                  "type": "string",
                  "title": "path of the route"
              },
              "wildcardPolicy": {
                  "$id": "#/properties/openshiftRoute/properties/wildcardPolicy",
                  "type": "string",
                  "title": "wildcard policy"
              },
              "tls": {
                  "$id": "#/properties/openshiftRoute/properties/tls",
                  "type": "object",
                  "title": "TLS configuration",
                  "description": "To enable HTTPS.",
                  "required": [
                      "enabled"
                  ],
                  "properties": {
                      "enabled": {
                          "$id": "#/properties/openshiftRoute/properties/tls/properties/enabled",
                          "type": "boolean",
                          "title": "Enabled"
                      },
                      "termination": {
                          "$id": "#/properties/openshiftRoute/properties/tls/properties/termination",
                          "type": "string",
                          "title": "Termination"
                      },
                      "insecureEdgeTerminationPolicy": {
                          "$id": "#/properties/openshiftRoute/properties/tls/properties/insecureEdgeTerminationPolicy",
                          "type": "string",
                          "title": "insecureEdgeTerminationPolicy"
                      }
                  },
                  "additionalProperties": true
              }
          },
          "additionalProperties": true
      },
      "ingress": {
          "$id": "#/properties/ingress",
          "type": "object",
          "title": "Ingress configuration",
          "description": "For routing on Kubernetes (disabled by default)",
          "required": [
              "enabled",
              "annotations",
              "hosts",
              "tls"
          ],
          "properties": {
              "enabled": {
                  "$id": "#/properties/ingress/properties/enabled",
                  "type": "boolean",
                  "title": "Enabled"
              },
              "annotations": {
                  "$id": "#/properties/ingress/properties/annotations",
                  "type": "object",
                  "title": "annotations",
                  "additionalProperties": true
              },
              "hosts": {
                  "$id": "#/properties/ingress/properties/hosts",
                  "type": "array",
                  "title": "hosts",
                  "default": [],
                  "examples": [
                      [
                          {
                              "host": "chart-example.local",
                              "paths": []
                          }
                      ]
                  ],
                  "additionalItems": true,
                  "items": {
                      "$id": "#/properties/ingress/properties/hosts/items",
                      "anyOf": [
                          {
                              "$id": "#/properties/ingress/properties/hosts/items/anyOf/0",
                              "type": "object",
                              "title": "first anyOf",
                              "properties": {
                                  "host": {
                                      "$id": "#/properties/ingress/properties/hosts/items/anyOf/0/properties/host",
                                      "type": "string",
                                      "title": "host"
                                  },
                                  "paths": {
                                      "$id": "#/properties/ingress/properties/hosts/items/anyOf/0/properties/paths",
                                      "type": "array",
                                      "title": "paths",
                                      "additionalItems": true,
                                      "items": {
                                          "$id": "#/properties/ingress/properties/hosts/items/anyOf/0/properties/paths/items"
                                      }
                                  }
                              },
                              "additionalProperties": true
                          }
                      ]
                  }
              },
              "tls": {
                  "$id": "#/properties/ingress/properties/tls",
                  "type": "array",
                  "title": "tls",
                  "description": "An explanation about the purpose of this instance.",
                  "additionalItems": true,
                  "items": {
                      "$id": "#/properties/ingress/properties/tls/items"
                  }
              }
          },
          "additionalProperties": true
      },
      "resources": {
        "$id": "#/properties/resources",
        "type": "object",
        "title": "Resources limits",
        "description": "Set limits for CPU or GPU",
        "additionalProperties": true
      },
      "imagePullSecrets": {
          "$id": "#/properties/imagePullSecrets",
          "type": "array",
          "title": "imagePullSecrets",
          "additionalItems": true,
          "items": {
              "$id": "#/properties/imagePullSecrets/items"
          }
      },
      "podAnnotations": {
          "$id": "#/properties/podAnnotations",
          "type": "object",
          "title": "Pod Annotations",
          "additionalProperties": true
      },
      "podSecurityContext": {
          "$id": "#/properties/podSecurityContext",
          "type": "object",
          "title": "Pod Security Context",
          "additionalProperties": true
      },
      "securityContext": {
          "$id": "#/properties/securityContext",
          "type": "object",
          "title": "Security Context"
      },
      "nodeSelector": {
          "$id": "#/properties/nodeSelector",
          "type": "object",
          "title": "Node Selector",
          "additionalProperties": true
      },
      "tolerations": {
          "$id": "#/properties/tolerations",
          "type": "array",
          "title": "Tolerations",
          "default": [],
          "examples": [
              []
          ],
          "additionalItems": true,
          "items": {
              "$id": "#/properties/tolerations/items"
          }
      },
      "affinity": {
          "$id": "#/properties/affinity",
          "type": "object",
          "title": "Affinity",
          "additionalProperties": true
      }
  }
}