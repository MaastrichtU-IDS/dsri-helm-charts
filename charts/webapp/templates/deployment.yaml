apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "webapp.fullname" . }}
  labels:
    {{- include "webapp.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "webapp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "webapp.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "webapp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: {{ .Values.storage.mountPath }}
          env:
            # To enable updating the image: https://github.com/kubernetes/kubernetes/issues/33664
            - name: RELEASE_DATE
              value: "{{ now }}"
            {{- range .Values.extraEnvs }}
            - name: {{ toString .name }}
              value: {{ toString .value }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15 
            failureThreshold: 40
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15 
            failureThreshold: 40
            periodSeconds: 10
            timeoutSeconds: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.storage.enabled }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.storage.mountPath }}
            # - name: dshm
            #   mountPath: /dev/shm
          {{- end }}
      {{- if .Values.storage.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "webapp.fullname" . }}
        # - name: dshm
        #   emptyDir:
        #     medium: Memory
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
