{{ template "chart.header" . }}

{{/* {{ template "chart.badgesSection" . }} */}}

{{ template "chart.typeBadge" . }} {{ template "chart.appVersionBadge" . }}

{{ template "chart.description" . }}

With this Helm chart you can easily deploy any Docker image based on the [official Jupyter docker stack](https://github.com/jupyter/docker-stacks), here are a few examples:
- ghcr.io/maastrichtu-ids/jupyterlab (with Java and SPARQL kernels)
- jupyter/minimal-notebook
- jupyter/scipy-notebook
- jupyter/datascience-notebook (with Julia kernel)
- jupyter/tensorflow-notebook
- jupyter/r-notebook
- jupyter/pyspark-notebook
- jupyter/all-spark-notebook

You can also extend those images to build a custom one with all the packages you need already installed, checkout https://github.com/MaastrichtU-IDS/jupyterlab for an example of a custom image build.

## Installing the Chart

To install the DSRI Helm Charts, if not already done:

```bash
helm repo add dsri https://maastrichtu-ids.github.io/dsri-helm-charts/
helm repo update
```

## Deploying the Chart

To deploy the chart with the release name `{{ template "chart.name" . }}`:

```bash
helm install {{ template "chart.name" . }} dsri/{{ template "chart.name" . }} \
  --set serviceAccount.name=anyuid \
  --set service.openshiftRoute.enabled=true \
  --set password=changeme
```

The command deploys {{ template "chart.name" . }} on the OpenShift or Kubernetes cluster in the default configuration.

## Updating the image in a deployed chart

To be able to trigger an update of the image deployed by the chart you will need to set `image.pullPolicy=Always` when deploying the chart. 

You can then update the image used by the running JupyterLab:

```bash
helm upgrade {{ template "chart.name" . }} dsri/{{ template "chart.name" . }}
```

## Uninstalling the Chart

To uninstall/delete the `{{ template "chart.name" . }}` deployment:

```bash
helm delete {{ template "chart.name" . }}
```

The command removes all the Kubernetes components associated with the chart and deletes the release.


## Configuration

The following table lists the configurable parameters of the {{ template "chart.name" . }} chart and their default values. They can be defined in the `values.yaml` file, or using the flag `--set`.

{{ template "chart.valuesTable" . }}